<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
		 FB.api('/me', function(response) {
			console.log('Successful login for: ' + JSON.stringify(response));
		});
		window.location.replace("/users/auth/facebook/callback");
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
	  FB.init({
		appId      : '768887709923922',
		cookie     : true,  // enable cookies to allow the server to access 
							// the session
		xfbml      : true,  // parse social plugins on this page
		version    : 'v2.5' // use version 2.2
	  });
  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

</script>

<h1>Sign up</h1>
<% if devise_error_messages! != "" %>
    <div class="alert alert-danger">
      <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a><%= devise_error_messages! %>
    </div>
<% end %>
<div class="row col-md-4">
<%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
  <div class="field form-group">
    <%= f.label :email %><br>
    <%= f.email_field :email, {autofocus: true, class: "form-control"} %>
  </div><br>

  <div class="field form-group">
    <%= f.label :password %>
    <% if @minimum_password_length %>
    <em>(<%= @minimum_password_length %> characters minimum)</em>
    <% end %><br />
    <%= f.password_field :password, {autocomplete: "off", class:"form-control"} %>
  </div>

  <div class="field form-group">
    <%= f.label :password_confirmation %><br />
    <%= f.password_field :password_confirmation, {autocomplete: "off", class:"form-control"} %>
  </div><br>

  <div class="actions form-group">
    <%= f.submit "Sign up", class: "btn btn-success" %>
  </div><br>
<% end %>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
</fb:login-button>

</div>

<div style="clear:both;"></div>

<%= render "devise/shared/links" %>
